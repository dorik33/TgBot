version: '3.8'

services:
  redis:
    image: redis:7
    container_name: telegram_bot_redis
    command: ["redis-server", "--requirepass", "${REDISPASSWORD}", "--port", "${REDIS_PORT}"]
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDISPASSWORD}", "-p", "${REDIS_PORT}", "PING"]
      interval: 5s
      timeout: 5s
      retries: 5
  postgres:
    image: postgres:15-alpine
    container_name: telegram_bot_db
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_DBNAME}
    volumes:
      - bot_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER} -d ${DATABASE_DBNAME}"]
      interval: 5s
      timeout: 5s
      retries: 5

  migrator:
    build: . 
    image: telegram_bot_migrator 
    container_name: migrator
    depends_on:
      postgres:
        condition: service_healthy
    command: ["sh", "-c", "./goose postgres \"postgres://${DATABASE_USER}:${DATABASE_PASSWORD}@postgres:${DATABASE_PORT}/${DATABASE_DBNAME}?sslmode=disable\" -dir /app/migrations up || [ $? -eq 3 ]"]
    volumes:
      - ./migrations:/app/migrations

  app:
    build: .
    image: telegram_bot
    container_name: 'bot'
    depends_on:
      postgres:
        condition: service_healthy
      migrator:
        condition: service_completed_successfully

volumes:
  bot_data: